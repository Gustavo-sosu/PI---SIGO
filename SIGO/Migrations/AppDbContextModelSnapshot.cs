// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SIGO.Data;

#nullable disable

namespace SIGO.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SIGO.Objects.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("senha");

                    b.Property<int>("Situacao")
                        .HasColumnType("integer")
                        .HasColumnName("Situacao");

                    b.HasKey("Id");

                    b.ToTable("cliente");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SIGO.Objects.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<int>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("integer")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cidade");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("estado");

                    b.Property<int>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("rua");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("endereco");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bairro = "Centro",
                            Cep = 1001000,
                            Cidade = "São Paulo",
                            ClienteId = 1,
                            Estado = "SP",
                            Numero = 123,
                            Rua = "Rua das Flores"
                        },
                        new
                        {
                            Id = 2,
                            Bairro = "Copacabana",
                            Cep = 22041001,
                            Cidade = "Rio de Janeiro",
                            ClienteId = 2,
                            Estado = "RJ",
                            Numero = 456,
                            Rua = "Av. Brasil"
                        });
                });

            modelBuilder.Entity("SIGO.Objects.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("telefone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            Numero = "11999999999"
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            Numero = "21988888888"
                        });
                });

            modelBuilder.Entity("SIGO.Objects.Models.ClienteF", b =>
                {
                    b.HasBaseType("SIGO.Objects.Models.Cliente");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<DateOnly>("DataNasc")
                        .HasColumnType("date")
                        .HasColumnName("datanasc");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("obs");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("sexo");

                    b.ToTable("clientef", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateOnly(2025, 6, 1),
                            Email = "joao@email.com",
                            Nome = "João Pereira",
                            Senha = "123456",
                            Situacao = 1,
                            Cpf = "12345678901",
                            DataNasc = new DateOnly(1990, 5, 12),
                            Obs = "Cliente antigo",
                            Sexo = "M"
                        });
                });

            modelBuilder.Entity("SIGO.Objects.Models.ClienteJ", b =>
                {
                    b.HasBaseType("SIGO.Objects.Models.Cliente");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cnpj");

                    b.Property<string>("Razao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("razao");

                    b.ToTable("clientej", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Data = new DateOnly(2025, 6, 3),
                            Email = "contato@empresaabc.com",
                            Nome = "Empresa ABC",
                            Senha = "123456",
                            Situacao = 1,
                            Cnpj = "12345678000199",
                            Razao = "Empresa ABC Ltda"
                        });
                });

            modelBuilder.Entity("SIGO.Objects.Models.Endereco", b =>
                {
                    b.HasOne("SIGO.Objects.Models.Cliente", "Clientes")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SIGO.Objects.Models.Telefone", b =>
                {
                    b.HasOne("SIGO.Objects.Models.Cliente", "Clientes")
                        .WithMany("Telefones")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SIGO.Objects.Models.ClienteF", b =>
                {
                    b.HasOne("SIGO.Objects.Models.Cliente", null)
                        .WithOne()
                        .HasForeignKey("SIGO.Objects.Models.ClienteF", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SIGO.Objects.Models.ClienteJ", b =>
                {
                    b.HasOne("SIGO.Objects.Models.Cliente", null)
                        .WithOne()
                        .HasForeignKey("SIGO.Objects.Models.ClienteJ", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SIGO.Objects.Models.Cliente", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
